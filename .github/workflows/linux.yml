# reference: https://github.com/zhuzichu520/FluentUI/blob/main/.github/workflows/ubuntu.yml

name: Build (and release) for Linux

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and release
    permissions:
      contents: write
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
          - qt_ver: 6.8.1        
            qt_arch: linux_gcc_64

    runs-on: ${{ matrix.os }}

    env:
      targetName: BleHelper

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v5
        with:
          version: 1.10.2
          
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.qt_ver }}
          arch: ${{ matrix.qt_arch }}
          cache: 'true'
          cache-key-prefix: 'install-qt-action'
          modules: 'qtshadertools qt5compat qtconnectivity'

      - name: Install dependencies
        run: |
          sudo apt-get install -y libxcb-cursor0 libgl1-mesa-dev libxcb1-dev libgtk-3-dev libxkbcommon-x11-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-sync-dev  libxcb-render-util0-dev libxcb-shm0-dev
          sudo apt install libfuse2
          sudo apt install openssl

      - name: Install Qt linux deploy
        uses: miurahr/install-linuxdeploy-action@v1
        with:
          plugins: qt appimage
          
      - name: Build the project
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_BUILD_TYPE=Release -GNinja ..
          cmake --build . --target all --config Release --parallel

      - name: Copy files
        run: |
          mkdir -p ./dist/
          mkdir -p ./dist/usr/bin/
          mkdir -p ./package/
          cp ./BleHelper/resources/images/icons/logo.svg ./dist/${{ env.targetName }}.svg
          cp ./build/BleHelper/BleHelper ./dist/${{ env.targetName }}
          cp -r ./build/BleHelper/i18n ./dist/usr/bin/i18n/

      - name: Package
        run: |
          # make sure Qt plugin finds QML sources so it can deploy the imported files
          export QML_SOURCES_PATHS=./
          linuxdeploy-x86_64.AppImage --plugin=qt --output=appimage --create-desktop-file --icon-file=./dist/${{ env.targetName }}.svg --executable=./dist/${{ env.targetName }} --appdir ./dist/
          mv ${{ env.targetName }}-*.AppImage ./package/${{ env.targetName }}.AppImage

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.targetName }}_${{ matrix.qt_arch }}_Qt${{ matrix.qt_ver }}
          path: ./package/${{ env.targetName }}.AppImage

      - name: Upload release
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./package/${{ env.targetName }}.AppImage
          asset_name: ${{ env.targetName }}_${{  github.ref_name }}_${{ matrix.qt_arch }}_Qt${{ matrix.qt_ver }}.AppImage
          tag: ${{ github.ref }}
          overwrite: true
